{"version":3,"sources":["Calculator/Ground.js","Calculator/Expression.js","Calculator/Result.js","App.js","serviceWorker.js","index.js"],"names":["Ground","props","useState","expression","setExpression","result","setResult","solved","setSolved","addNewValue","value","reset","prevState","calculate","eval","Error","e","console","log","className","onClick","event","target","textContent","Expression","Result","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b30ea0ab.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport Expression from \"./Expression\";\nimport Result from \"./Result\";\n\n\nfunction Ground(props) {\n\n    const [expression, setExpression] = useState(\"\")\n    const [result, setResult] = useState(\"\")\n    const [solved, setSolved] = useState(false)\n\n    const addNewValue = value => {\n        if (solved) {\n            setSolved(false)\n            reset()\n        }\n        setExpression(prevState => prevState + value)\n\n    }\n\n\n    const calculate = () => {\n        try {\n            const result = eval(expression)\n            if (result) {\n                setResult(result)\n            } else {\n                throw new Error()\n            }\n        } catch (e) {\n            console.log(e)\n            setResult(\"Invalid\")\n        }\n        setSolved(true)\n    }\n\n    const reset = () => {\n        setExpression(\"\")\n        setResult(\"\")\n    }\n\n    return (\n        <>\n            <Expression value={expression}/>\n            <div className={\"pure-g\"}>\n                <button className={\"pure-u-1-24 pure-button\"}\n                        onClick={(event) => addNewValue(event.target.textContent)}>(\n                </button>\n\n                <button className={\"pure-u-1-24 pure-button\"}\n                        onClick={(event) => addNewValue(event.target.textContent)}>)\n                </button>\n\n                <button className={\"pure-u-1-24 pure-button\"}\n                        onClick={(event) => addNewValue(\"**\")}>^\n                </button>\n            </div>\n\n            <div className={\"pure-g\"}>\n                <button className={\"pure-u-1-24 pure-button\"}\n                        onClick={(event) => addNewValue(event.target.textContent)}>0\n                </button>\n\n                <button className={\"pure-u-1-24 pure-button\"}\n                        onClick={(event) => addNewValue(event.target.textContent)}>1\n                </button>\n\n                <button className={\"pure-u-1-24 pure-button\"}\n                        onClick={(event) => addNewValue(event.target.textContent)}>2\n                </button>\n\n                <button className={\"pure-u-1-24 pure-button\"}\n                        onClick={(event) => addNewValue(event.target.textContent)}>+\n                </button>\n            </div>\n\n            <div className={\"pure-g\"}>\n                <button className={\"pure-u-1-24 pure-button\"}\n                        onClick={(event) => addNewValue(event.target.textContent)}>3\n                </button>\n\n                <button className={\"pure-u-1-24 pure-button\"}\n                        onClick={(event) => addNewValue(event.target.textContent)}>4\n                </button>\n\n                <button className={\"pure-u-1-24 pure-button\"}\n                        onClick={(event) => addNewValue(event.target.textContent)}>5\n                </button>\n\n                <button className={\"pure-u-1-24 pure-button\"}\n                        onClick={(event) => addNewValue(event.target.textContent)}>-\n                </button>\n            </div>\n\n            <div className={\"pure-g\"}>\n                <button className={\"pure-u-1-24 pure-button\"}\n                        onClick={(event) => addNewValue(event.target.textContent)}>6\n                </button>\n\n                <button className={\"pure-u-1-24 pure-button\"}\n                        onClick={(event) => addNewValue(event.target.textContent)}>7\n                </button>\n\n                <button className={\"pure-u-1-24 pure-button\"}\n                        onClick={(event) => addNewValue(event.target.textContent)}>8\n                </button>\n\n                <button className={\"pure-u-1-24 pure-button\"}\n                        onClick={(event) => addNewValue(event.target.textContent)}>*\n                </button>\n            </div>\n\n            <div className={\"pure-g\"}>\n                <button className={\"pure-u-1-24 pure-button\"} onClick={() => reset()}>Esc</button>\n\n                <button className={\"pure-u-1-24 pure-button\"}\n                        onClick={(event) => addNewValue(event.target.textContent)}>9\n                </button>\n\n                <button className={\"pure-u-1-24 pure-button\"}\n                        onClick={(event) => addNewValue(event.target.textContent)}>/\n                </button>\n\n                <button className={\"pure-u-1-24 pure-button pure-button-primary\"}\n                        onClick={() => calculate()}> =\n                </button>\n            </div>\n            <Result value={result}/>\n        </>\n    );\n}\n\nexport default Ground;","import React from 'react';\n\nfunction Expression(props) {\n    return (\n            <h2>{props.value||0}</h2>\n    );\n}\n\nexport default Expression;","import React from 'react';\n\nfunction Result(props) {\n    return (\n        <h2>{props.value}</h2>\n    );\n}\n\nexport default Result;","import React from 'react';\n\nimport Ground from \"./Calculator/Ground\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Ground/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}